{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "3845678047837296251"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "japaneast",
      "metadata": {
        "description": "Specifies the primary location of Azure resources."
      }
    },
    "resourceToken": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id, parameters('location'))]",
      "metadata": {
        "description": "Specifies the name prefix."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Specifies the resource tags."
      }
    },
    "aiFoundryName": {
      "type": "string",
      "defaultValue": "[format('aiFoundry-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Specifies the name of the Azure AI Foundry resource."
      }
    },
    "aiFoundryProjectName": {
      "type": "string",
      "defaultValue": "[format('aiFoundryProject-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Specifies the name of the Azure AI Foundry project."
      }
    },
    "aiFoundryModelDeployments": {
      "type": "array",
      "defaultValue": [
        {
          "name": "gpt-4o",
          "sku": {
            "capacity": 450,
            "name": "GlobalStandard"
          },
          "model_name": "gpt-4o"
        },
        {
          "name": "text-embedding-3-small",
          "sku": {
            "capacity": 350,
            "name": "GlobalStandard"
          },
          "model_name": "text-embedding-3-small"
        }
      ],
      "metadata": {
        "description": "Specifies the name of the model deployment."
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": "[format('cosmosdb-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Specifies the name of the Cosmos DB account."
      }
    },
    "cosmosDbDatabaseName": {
      "type": "string",
      "defaultValue": "template_langgraph",
      "metadata": {
        "description": "Specifies the name of the Cosmos DB database."
      }
    },
    "cosmosDbContainerName": {
      "type": "string",
      "defaultValue": "kabuto",
      "metadata": {
        "description": "Specifies the name of the Cosmos DB container."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('appServicePlan-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Specifies the name of the Azure App Service plan."
      }
    },
    "appServiceName": {
      "type": "string",
      "defaultValue": "[format('appService-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Specifies the name of the Azure App Service."
      }
    },
    "appServiceDockerImage": {
      "type": "string",
      "defaultValue": "ks6088ts/template-langgraph:latest",
      "metadata": {
        "description": "Specifies the Docker image for the Azure App Service."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2025-06-01",
      "name": "[parameters('aiFoundryName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "S0"
      },
      "kind": "AIServices",
      "properties": {
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow"
        },
        "disableLocalAuth": false,
        "allowProjectManagement": true,
        "customSubDomainName": "[parameters('aiFoundryName')]"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/projects",
      "apiVersion": "2025-06-01",
      "name": "[format('{0}/{1}', parameters('aiFoundryName'), parameters('aiFoundryProjectName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiFoundryName'))]"
      ]
    },
    {
      "copy": {
        "name": "aiFoundryDeployments",
        "count": "[length(parameters('aiFoundryModelDeployments'))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2025-06-01",
      "name": "[format('{0}/{1}', parameters('aiFoundryName'), parameters('aiFoundryModelDeployments')[copyIndex()].name)]",
      "tags": "[parameters('tags')]",
      "sku": "[parameters('aiFoundryModelDeployments')[copyIndex()].sku]",
      "properties": {
        "model": {
          "name": "[parameters('aiFoundryModelDeployments')[copyIndex()].model_name]",
          "format": "OpenAI"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiFoundryName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2025-05-01-preview",
      "name": "[parameters('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "GlobalDocumentDB",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]"
          }
        ],
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2025-05-01-preview",
      "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbDatabaseName')]"
        },
        "options": {
          "throughput": 400
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2025-05-01-preview",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'), parameters('cosmosDbContainerName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbContainerName')]",
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2024-11-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "B1"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2024-11-01",
      "name": "[parameters('appServiceName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "app,linux,container",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "[format('DOCKER|{0}', parameters('appServiceDockerImage'))]",
          "appSettings": [
            {
              "name": "COSMOSDB_HOST",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2025-05-01-preview').documentEndpoint]"
            },
            {
              "name": "COSMOSDB_KEY",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2025-05-01-preview').primaryMasterKey]"
            },
            {
              "name": "AZURE_OPENAI_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiFoundryName')), '2025-06-01').endpoints['OpenAI Language Model Instance API']]"
            },
            {
              "name": "AZURE_OPENAI_API_KEY",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiFoundryName')), '2025-06-01').key1]"
            },
            {
              "name": "WEBSITES_PORT",
              "value": "8000"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiFoundryName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "aiFoundryAccountId": {
      "type": "string",
      "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiFoundryName'))]"
    },
    "aiFoundryAccountName": {
      "type": "string",
      "value": "[parameters('aiFoundryName')]"
    },
    "aiFoundryEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiFoundryName')), '2025-06-01').endpoints['OpenAI Language Model Instance API']]"
    },
    "cosmosDbAccountId": {
      "type": "string",
      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
    },
    "cosmosDbAccountName": {
      "type": "string",
      "value": "[parameters('cosmosDbAccountName')]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2025-05-01-preview').documentEndpoint]"
    },
    "cosmosDbDatabaseId": {
      "type": "string",
      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]"
    },
    "cosmosDbDatabaseName": {
      "type": "string",
      "value": "[parameters('cosmosDbDatabaseName')]"
    },
    "cosmosDbContainerId": {
      "type": "string",
      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'), parameters('cosmosDbContainerName'))]"
    },
    "cosmosDbContainerName": {
      "type": "string",
      "value": "[parameters('cosmosDbContainerName')]"
    },
    "appServicePlanId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
    },
    "appServicePlanName": {
      "type": "string",
      "value": "[parameters('appServicePlanName')]"
    },
    "appServiceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
    },
    "appServiceName": {
      "type": "string",
      "value": "[parameters('appServiceName')]"
    },
    "appServiceUrl": {
      "type": "string",
      "value": "[format('https://{0}.azurewebsites.net', parameters('appServiceName'))]"
    }
  }
}